app.controller('HomeCtrl', ['$scope', '$http', '$routeParams', 'uiGmapGoogleMapApi', '$timeout', 'WeatherServices', '$sce', function($scope, $http, $routeParams, uiGmapGoogleMapApi, $timeout, WeatherServices, $sce){

  $scope.loading = false;
  $scope.outBox = true;
  $scope.showHide = "glyphicon-minus";
  $scope.search = true;
  $scope.trailPanel = false;
  $scope.map = homeMap;
  $scope.zero = false;

  // the map
  var map;
  var homeMap = {
    center: { 
      latitude: 22.3991729, //tai lam country park
      longitude: 114.1320305
    },
    zoom: 11,
    bounds: {
      latitude: 22.1634178, 
      longitude: 113.5629425
    }
  };
  // styling options, array
  var hikeMapStyle = [
    {
      "featureType":"landscape.natural",
      "elementType":"geometry.fill",
      "stylers":[
        {"visibility":"on"},
        {"color":"#e0efef"}
      ]
    },
    {
      "featureType":"poi",
      "elementType":"geometry.fill",
      "stylers":[
        {"visibility":"on"},
        {"hue":"#1900ff"},
        {"color":"#c0e8e8"}
      ]
    },
    {
      "featureType":"road",
      "elementType":"geometry",
      "stylers":[
        {"lightness":100},
        {"visibility":"simplified"}
      ]
    },
    {
      "featureType":"road",
      "elementType":"labels",
      "stylers":[
        {"visibility":"off"}
      ]
    },
    {
      "featureType":"transit.line",
      "elementType":"geometry",
      "stylers":[
        {"visibility":"on"},
        {"lightness":700}
      ]
    },
    {
      "featureType":"water",
      "elementType":"all",
      "stylers":[
        {"color":"#7dcdcd"}
      ]
    }
  ];

  // the toggle function that show and hide the filter
  $scope.showbox = function(){
    $scope.outBox = !$scope.outBox;
    if ($scope.outBox == true){
      $scope.showHide = "glyphicon-minus";
    }
    else if($scope.outBox == false){
      $scope.showHide = "glyphicon-plus";
    }
  }

  $scope.goHome = function(){
    // console.log('go home clicked');
    $scope.map.center.latitude = 22.3991729;
    $scope.map.center.longitude = 114.1320305
    $scope.map.zoom = 11;
    $scope.search = true;
    $scope.trailPanel = false;
  }

  // the switch that switch from search results to individual result
  $scope.switchPanel = function(){
    $scope.search = !$scope.search;
    $scope.trailPanel = !$scope.trailPanel;
    $scope.goHome();
  }

  $scope.openTrailPanel = function(id){
    console.log(id);
    $http.get('/trails/'+ id).success(function(data, status, xhr) {
      $scope.oneTrail = data;
      // console.log(data);
      // console.log($scope.oneTrail);
      // oneTrail.start_longitude;
      // oneTrail.start_latitude;
      $scope.search = false;
      $scope.trailPanel = true;
      $scope.map.center.latitude = 22.3876982;
      $scope.map.center.longitude = 114.0500164;
      $scope.map.zoom = 15;
    })
  }

  // the function that create the stars
  $scope.makeStars = function(factor) {
    // console.log('factor:',factor);
    var range = 5.0;
    var wholeDiff = range - factor;
    stars = "";
    for (var i = factor; i > 0; i--) {
      if (i == 0.5) {
        stars = stars + "<li class='icon fa fa-star-half-empty'></li>";
      } else {
        stars = stars + "<li class='icon fa fa-star'></li>";
      }
    }
    for (var i = wholeDiff; i > 0.5; i--) {
      stars = stars + "<li class='icon fa fa-star-o'></li>";
    }
    // must trust html for it to show up
    return $sce.trustAsHtml(stars);
  }

  // map options
  $scope.options = {
    scrollwheel: true,
    styles: hikeMapStyle,
    panControl:false,
    zoomControl:true,
    zoomControlOptions: {
        style: google.maps.ZoomControlStyle.SMALL,
        position: google.maps.ControlPosition.LEFT_BOTTOM
    },
    mapTypeControl:false,
    scaleControl:false,
    streetViewControl:false,
    minZoom: 10,
    maxZoom: 16
  };

  $scope.search_parameters = {
    distance: 24,
    duration: 10,
    difficulty: 5,
    scenery: 5,
    regions: [
      { text: "HK", checked: true },
      { text: "KLN", checked: true },
      { text: "N.T.", checked: true }
    ]
  }

  // slider for distance (km)
  $scope.sliderDistanceConfig = {
      min: 0,
      max: 24,
      step: 1,
      value: 24
  }

  // slider for durations (hours)
  $scope.sliderDurationConfig = {
      min: 0,
      max: 10,
      step: 0.5,
      value: 10
  }

  // slider for difficulties (0-5)
  $scope.sliderDifficultConfig = {
      min: 0,
      max: 5,
      step: 0.5,
      value: 5
  }

  // slider for scenery (0-5)
  $scope.sliderSceneryConfig = {
      min: 0,
      max: 5,
      step: 0.5,
      value: 5
  }

  // $scope.lat = 22.268394; //set to trails beginning coordinates
  // $scope.lon = 114.186700;

  // Weather service functions to get weather details
  $scope.getWeather = function(lat, lon){
    WeatherServices.returnWeather(lat, lon).success(function(data){
      $scope.weatherInfo = WeatherServices.processData(data)
    });
  }

  // initial markers set, see html models = 'trails'
  $scope.trailMarkers = [{ 
      title: "Dragon's Back",
      latitude: 22.241165, 
      longitude: 114.241569,
      id: 1,
      show: false,
      description: "",
      icon: "assets/hike_marker.png"
    },{
      title: "Victoria Peak",
      latitude: 22.275590,
      longitude: 114.143910,
      id: 2,
      show: false,
      description: "",
      icon: "assets/hike_marker.png"
  }];

  // $scope.trails.push(trail);
  // $scope.addMarker = function(){
  //   var newtrail = { 
  //       title: "Happy Valley",
  //       latitude: 22.268394, 
  //       longitude: 114.186700,
  //       description: "",
  //       show: false,
  //       id: 3,
  //   };
  //   $scope.trails.push(newtrail);
  // }

  // dont undersatnd ui-gamp-windows at all show is not working
  // onclick the window shows up, with title and description
  // $scope.trails.onMouseOver = function() {
  //     trails.show = !trails.show;
  // };

  // soon to be replaced by search/filter results
  // $http.get('/trails').success(function(data, status, xhr) {
  //   $scope.trails = data.trails;
  //   // console.log($scope.trails);
  // })

  // array of trails for plotting polylines
  var trail1 = [
    "22.26618,114.24983",
    "22.26610,114.24999",
    "22.26590,114.25035",
    "22.26584,114.25044",
    "22.26524,114.25122",
    "22.26494,114.25157",
    "22.26472,114.25177",
    "22.26470,114.25178",
    "22.26473,114.25186",
    "22.26477,114.25207",
    "22.26476,114.25221",
    "22.26485,114.25227",
    "22.26491,114.25234",
    "22.26493,114.25244",
    "22.26491,114.25264",
    "22.26481,114.25283",
    "22.26475,114.25290",
    "22.26458,114.25300",
    "22.26444,114.25308",
    "22.26436,114.25316",
    "22.26399,114.25335",
    "22.26367,114.25344",
    "22.26358,114.25347",
    "22.26351,114.25353",
    "22.26312,114.25387",
    "22.26302,114.25393",
    "22.26285,114.25397",
    "22.26268,114.25397",
    "22.26174,114.25399",
    "22.26169,114.25398",
    "22.26160,114.25392",
    "22.26155,114.25386",
    "22.26150,114.25384",
    "22.26137,114.25389",
    "22.26111,114.25399",
    "22.26085,114.25405",
    "22.26057,114.25409",
    "22.26041,114.25407",
    "22.26007,114.25392",
    "22.25976,114.25377",
    "22.25956,114.25370",
    "22.25946,114.25363",
    "22.25928,114.25340",
    "22.25884,114.25271",
    "22.25855,114.25221",
    "22.25838,114.25201",
    "22.25824,114.25195",
    "22.25812,114.25196",
    "22.25755,114.25213",
    "22.25704,114.25229",
    "22.25693,114.25227",
    "22.25683,114.25220",
    "22.25680,114.25209",
    "22.25695,114.25161",
    "22.25695,114.25152",
    "22.25694,114.25148",
    "22.25686,114.25142",
    "22.25679,114.25169",
    "22.25677,114.25166",
    "22.25672,114.25159",
    "22.25668,114.25152",
    "22.25667,114.25144",
    "22.25657,114.25133",
    "22.25649,114.25128",
    "22.25633,114.25124",
    "22.25624,114.25126",
    "22.25597,114.25128",
    "22.25576,114.25124",
    "22.25560,114.25115",
    "22.25540,114.25099",
    "22.25532,114.25094",
    "22.25514,114.25090",
    "22.25449,114.25078",
    "22.25428,114.25080",
    "22.25419,114.25075",
    "22.25406,114.25065",
    "22.25395,114.25048",
    "22.25388,114.25037",
    "22.25385,114.25026",
    "22.25382,114.25019",
    "22.25370,114.25008",
    "22.25339,114.24987",
    "22.25337,114.24975",
    "22.25334,114.24951",
    "22.25306,114.24883",
    "22.25303,114.24864",
    "22.25261,114.24863",
    "22.25235,114.24868",
    "22.25211,114.24877",
    "22.25172,114.24876",
    "22.25151,114.24881",
    "22.25142,114.24880",
    "22.25132,114.24875",
    "22.25106,114.24865",
    "22.25093,114.24858",
    "22.25084,114.24858",
    "22.25062,114.24866",
    "22.25048,114.24877",
    "22.25025,114.24901",
    "22.24966,114.24926",
    "22.24955,114.24927",
    "22.24945,114.24924",
    "22.24936,114.24923",
    "22.24930,114.24925",
    "22.24925,114.24929",
    "22.24923,114.24935",
    "22.24920,114.24941",
    "22.24914,114.24943",
    "22.24911,114.24946",
    "22.24909,114.24951",
    "22.24904,114.24954",
    "22.24892,114.24950",
    "22.24873,114.24954",
    "22.24854,114.24957",
    "22.24756,114.24917",
    "22.24748,114.24917",
    "22.24741,114.24918",
    "22.24731,114.24915",
    "22.24712,114.24908",
    "22.24695,114.24906",
    "22.24690,114.24907",
    "22.24683,114.24905",
    "22.24662,114.24919",
    "22.24659,114.24918",
    "22.24646,114.24902",
    "22.24637,114.24874",
    "22.24636,114.24849",
    "22.24630,114.24844",
    "22.24637,114.24833",
    "22.24655,114.24830",
    "22.24666,114.24822",
    "22.24669,114.24810",
    "22.24694,114.24796",
    "22.24690,114.24784",
    "22.24705,114.24778",
    "22.24710,114.24765",
    "22.24705,114.24749",
    "22.24696,114.24728",
    "22.24683,114.24714",
    "22.24675,114.24680",
    "22.24676,114.24663",
    "22.24669,114.24646",
    "22.24650,114.24622",
    "22.24638,114.24606",
    "22.24632,114.24596",
    "22.24628,114.24585",
    "22.24617,114.24556",
    "22.24609,114.24553",
    "22.24577,114.24550",
    "22.24549,114.24549",
    "22.24525,114.24547",
    "22.24502,114.24549",
    "22.24479,114.24561",
    "22.24457,114.24576",
    "22.24454,114.24579",
    "22.24443,114.24583",
    "22.24422,114.24592",
    "22.24421,114.24595",
    "22.24421,114.24598",
    "22.24425,114.24604"
    ]

  // this is an array of coordinates for the polylines
  var makeCoord = function(array) {
    new_array = [];
    for (var i =0; i < array.length; i++){
      new_array.push({ latitude: array[i].split(',')[0], longitude: array[i].split(',')[1]});
    }
    return new_array;
  }

  // polyline test...
  $scope.polylines = [
      {
          id: 2,
          path: makeCoord(trail1), 
          stroke: {
              // color: '#4EAE47',
              color: 'red',
              weight: 3
          },
          editable: false,
          draggable: false,
          geodesic: false,
          visible: true,
          icons: [{
              icon: {
                  // path: google.maps.SymbolPath.BACKWARD_OPEN_ARROW
              },
              offset: '25px',
              repeat: '50px'
          }]
      }
  ];

  var timeOut = 1000;
  var timeoutPromise;
  var getParams = function(){
    $scope.loading = true;
    $timeout.cancel(timeoutPromise);
    timeoutPromise = $timeout(function(){   //Set timeout
      // console.log("getParams function at work");
      submitParams();
    }, timeOut);
  }

  $scope.$watch("search_parameters.difficulty", function() {
    getParams();
  });
  $scope.$watch("search_parameters.duration", function() {
    getParams();
  });
  $scope.$watch("search_parameters.distance", function() {
    getParams();
  });
  $scope.$watch("search_parameters.scenery", function() {
    getParams();
  });
  $scope.$watch("search_parameters.regions[0].checked", function() {
    console.log("getParams region 0");
    getParams();
  });
  $scope.$watch("search_parameters.regions[1].checked", function() {
    console.log("getParams region 1");
    getParams();
  });
  $scope.$watch("search_parameters.regions[2].checked", function() {
    console.log("getParams region 2");
    getParams();
  });

  var submitParams = function() {
    $http.get('http://localhost:3000/search?duration='+$scope.search_parameters.duration+"&difficulty="+$scope.search_parameters.difficulty+"&scenery="+$scope.search_parameters.scenery+"&distance="+$scope.search_parameters.distance+"&hk="+$scope.search_parameters.regions[0].checked+"&kln="+$scope.search_parameters.regions[1].checked+"&nt="+$scope.search_parameters.regions[2].checked).success(function(data, status, xhr){
        // console.log($scope.search_parameters.regions.checked)
        console.log("submit parmas data is ", data);
        $scope.trails = data.trails;
        $scope.loading = false;
        // console.log("length", data.trails.length);
        if (data.trails.length == 0){
          $scope.zero = true;
          // console.log($scope.zero);
        }
    })
  }

}]);

